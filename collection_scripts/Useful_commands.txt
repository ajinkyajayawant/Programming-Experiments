Change shell to zsh(once installation of package is done)
chsh -s $(which zsh)
List available shells: cat /etc/shells

sudo add-apt-repository ppa:blueman/ppa
sudo apt-get update
sudo apt-get upgrade blueman
sudo apt-get install pulseaudio-module-bluetooth
continue tithout pairing
pactl load-module module-bluetooth-discover

Sometimes the pulseaudio does not detect the blutooth speaker, in that case can do

To provide yes as an answer to a command which prompts you, for example apt-get upgrade: yes | sudo apt-get upgrade
Logical commands execution linux
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<Command_a> && <Command_b> : Excecutes <Command_b> only if <Command_a> is a success.
<Command_a> || <Command_b> : Excecutes <Command_b> only if <Command_a> is a fail.
<Command_a> ; <Command_b> : Excecutes <Command_a> and then <Command_b>.

Wait for some time: sleep <time in seconds>
Change directory into previous directory: cd -

To interchange two keys on keyboard
-----------------------------------
xev
(state 0x10, keycode 110 (keysym 0xff55, Prior), same_screen YES,)
xmodmap -e "keycode 110 = Next"
This one works -> setxkbmap -option ctrl:swapcaps
Just do this again after plugging in a new keyboard

Backlight to minimum
--------------------
xbacklight -set 10

Turn off display
----------------
xset dpms force off(with keyboard shortcut as shit+F1)

To cut a video using ffmpeg
---------------------------
ffmpeg -i in.mp4 -ss [start] -t [duration] -c copy out.mp4

To make frames from a video
---------------------------
ffmpeg -i input.avi output%d.png
To concatenate frames into a video - ffmpeg -f image2 -framerate 5 -i image%2d.png vieo.mp4

Junest
------
pacman -Sy
pacman python
pacman python-numpy
pacman python-scipy
pacman python-matplotlib
pacman emacs
pacman python-pip
pip install -U scikit-learn
pacman -S gcc

Pip
~~~
Checking version of a python package: pip show <packagename> | grep Version
pip-autoremove <package name> to remove package and dependencies

emacs
-----
Find the version: M-x emacs-version
kill-rectangle: Mark one corner of the rectangle go to the other end and do M-x kill-rectangle. M-x copy-rectangle-as-kill copies a rectangle. M-x yank-rectangle pastes the rectangle.
For inserting text in a rectangle: M-x string-insert-rectangle RET string RET
Replace rectangle: M-x string-rectangle
Count words and lines: M-x count-words, M-x count-lines
Show cursor position(especially column number) momentarily: M-x what-cursor-position
Deleting backup files -> Open dired, press ~(flags all backup files), press x, confirm
Deleting backup files recursively: M-x find-name-dired, select directory, file pattern *~ and repeat the procedure above
Open file in view/read only alt+x view-file. Convert and already opened file into view mode: alt+x view-mode
view-file has its special shortcuts like q which exits the view mode. So a better solution in later versions of emacs is: M-x read-only-mode
Open file in read only mode from terminal: emacsclient --create-frame --eval '(view-file "<filename>")'
A file opened from gui closes all the frames when I close that buffer. A better option is to create an emacsclient frame assuming a server exists: emacsclient --create-frame &
Opening file from dired: M-x dired, specify directory, press enter on a file.
Substitute selection - (delete-selection-mode 1)
Display line numbers - (global-linum-mode t)
Replacing newline, enter newline character C-q C-j
Replace expressions - Suppose we have to replace a linebreak. This is basically an a newline at the end of a line to maintain fixed column width. '\(\ca\)C-q C-j \(\ca\)' replace with '\1 \2'. \(\) forms a group and in the replacing we can refer to the group by a number. Similarly if we want to replace three or more newlines with two newlines we can say replace 'C-qC-jC-qC-j+' with 'C-qC-jC-qC-j.
Add a whitespace after comma: M-x query-replace-regexp ,\([[:graph:]]\) -> , \1
Replace all occurences - !
Ido mode suggestion ignore- press C-f again
Delete lines containing a phrase - Meta-x flush-lines(It also has keep lines)
Reload file - A-x revert-buffer
M-x list-packages and M-x package-list-packages are different, wasn't able to install matlab mode from former, installed it with later
Installed - matlab-mode
Set mark - C-space
Incremental regexp search: isearch-forward-regexp. But for convenience Ctrl+Alt+S is better to make the same search again and again.
Center page around the cursor: C-l
Count number of lines in the page(before and after cursor): C-x l
Filter regexp: M-x occur RET <regexp> and then M-x keep-lines
Help on a C-x command: C-x ?
Open a new frame: C-x 5 2
Close the current frame: C-x 5 0
(Frames are the gui windows in emacs)
It makes sense to have split window inside a tab so we can have different locations views of the same file.
It makes sense to have different contexts in different frames. Like programming related stuff in a frame. Text notes in one frame. And so on.
Reload config file M-x load-file
If the tabbar crashes or disappears just enable it from Options->Show/Hide->Tab Bar
To close an emacs window opened by clicking, C-x C-c. To close a frame from opened from inside emacs C-x 5 0.
To see what all operations were done say after a file locally changed and emacs tried to revert, check out the Messages buffer.
Convert region to lowercase: M-x downcase-region
Find the value of a variable: M-x describe-variable
### Org mode useful commands
* The variable org-agenda-files holds the search paths for agenda files
* Add the current file to agenda search list: org-agenda-file-to-front
Directories and file
~~~~~~~~~~~~~~~~~~~~
M-x create-directory
M-x delete-directory
M-x delete-file
Kill/save multiple buffers:
M-x buffer-menu
Flag buffers for deletion using d
Flag buffers for save using s
Execute the commands with x
### Search
* The search that gives the results one by one in emacs is the incremental search. Its commands start with isearch keyword. The shortcut to move to the next word in the incremental search is C-M-s.

Git
------
git init
git remote add origin https://github.com/ginkx/surfacing-tetrahedral.git
git config --global user.name
git config --global user.email
ls
vim .gitignore
git status
vim .gitignore
git status
git add *
git status
git add *.cpp
git add *.hpp
git add .gitignore
git status
git commit -m 'Initial project repo'
git push -u origin master
ls ~/.ssh
ssh-keygen -t rsa -b 4096 -C "ajinkyajayawant@yahoo.in"
cat ~/.ssh/id_rsa.pub
git status
clear
ls
touch readme.md
git add readme.md
git commit -m 'Added readme'
git push origin master
git remote add origin git@github.com:ginkx/surfacing-tetrahedral.git
git remote set-url origin git@github.com:ginkx/surfacing-tetrahedral.git
git push origin master
Sometimes when I add a file like LICENSE to github repository I need to update it with the local repository. To do that I do 'git fetch origin', then I do 'git merge origin/master' and 'git push -u origin master'.
To view all commits do 'git log'.

Git branch details
~~~~~~~~~~~~~~~~~~
Create a new branch: git branch <new branch name>
git branch -av

Resolve merge conflict: Simple way is to edit the file yourself to remove the conflicts.

Git stashing working directory
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Git stash basically stores all changes since a commit in a buffer and returns a clean working directory.
Create a named stash using - git stash save "<stash name>"
Create a named stash using (saves untracked files too) - git stash -u "<stash name>"
List all stashes - git stash list
Check details on a stash - git stash show stash@{0}
To apply a stash to the current working directory - git stash apply stash@{0}
Drop a stash - git stash drop stash@{0}
Pop a stash(Convenient because you don't have to remember whether you used a stash or not) - git stash pop stash@{0}
Drop all stashes - git stash clear
To discard unstaged changes the cleanest way I have found is to stash them and then drop the stash.
The cleanest way to check for conflicts with the current branch in git is to create a new branch and try to merge there. This is a good idea because branches are so cheap you could just delete the new branch after trying.

Git get a file from a particular Hash - git show <HASH>:/path/to/file > <file_destination>
Git push a local branch to the repo: git push -u origin <branchname>

Git file status
~~~~~~~~~~~~~~~
git status --ignored
git ls-files --others --ignored --exclude-standard
git ls-files --cached
(Use this command with caution as it will overwrite local modified by unstaged file) Checkout a file from an old commit(In case you deleted by mistake or don't want to current one): git checkout <HASH> -- <filepath>
When you don't remember the order in the files were modified, the best bet is see the last modified:
git status -s | while read mode file; do echo $mode $file $(stat -c %y $file); done
With sort by date:
git status -s | while read mode file; \
  do echo $mode $(stat -c %y $file) $file; \
done|sort -k1,4

Git and file permissions
~~~~~~~~~~~~~~~~~~~~~~~~
Discarding changes in file permissions/mode or executable :
Config ONLY for current repo:
git config core.filemode false

Config globally:
git config --global core.filemode false

Find all the git configurations:
git config --list

Find available merge tools:
git mergetool --tool-help

Find current mergetool:
git config --get merge.tool

Configure mergetool:
git config --global merge.tool <tool name>

A merge conflict inserts markers in the conflicted files and your task is to clear the markers. git mergetool creates additional files with REMOTE, LOCAL,... names. Tools like meld use these files to edit the marked up conflicted file. When we exit the REMOTE, LOCAL, ... files get deleted too.
git mergetool creates *.orig backup files while resolving merges. These are safe to remove once a file has been merged and its git mergetool session has completed.
LOCAL - the head for the file(s) from the current branch on the machine that you are using.
REMOTE - the head for files(s) from a remote location that you are trying to merge into your LOCAL branch.
BASE - the common ancestor(s) of LOCAL and REMOTE.
MERGED - the tag / HEAD object after the merge - this is saved as a new commit.

Add in ~/.gitconfig:
[core]
filemode = false

Git deleting branches locally when you mess it up
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
git branch -d <local_branch>
To delete a branch from the online repository: git push <remote> --delete <branch>

Git stop tracking files but don't delete from local tree:
git rm --cached
git rm --cached -r ./
(May need to update index after this)
Unstage staged file: git reset HEAD <filename>
Visualize git branches: gitk --all
Compare two branches git: git diff <branch1>..<branch2>

Git delete untracked files
~~~~~~~~~~~~~~~~~~~~~~~~~~
git clean -n
git clean

Git commits to different branches
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Get the code from the remote branch - git fetch
Merge the code locally with my current commit - git pull
Search git commit messages: git log --all --grep=<text to search>'
Merge a branch into another: git merge --no-ff <name of branch to merge>

Git comparing
~~~~~~~~~~~~~
To list the SHA HASHES of commits - git log
To compare with previous commit - git diff HEAD^ HEAD
To list the files in a commit - git ls-tree --name-only -r <SHA_HASH>
List the differences between the commits - git diff --stat <SHA_HASH1> <SHA_HASH2>
Show the files which changed between the commits - git diff --name-only <SHA_HASH1> <SHA_HASH2>
Show the files which changed between the commits along with short summary about change in file status - git diff --name-status <SHA_HASH1> <SHA_HASH2>
If a good visual utility like meld is available do git difftool instead of git diff
git diff HEAD shows the difference with the last commit. This helps when you stage the files and for the commit message you want to diff and see.
To see the commits in which a file has changed: git log --follow -- <filename>
Comparing directories is also possible using meld.
Otherwise for comparing directories either do:
diff -r dir1 dir2
or
diff -qr dir1 dir2
If the differences are hard to read, use
diff -r dir1 dir2 | sort
git diff <x> <x+∆x> shows the difference ∆x.
Check for conflicts before merging: git merge --no-commit --no-ff $BRANCH, git merge --abort But I think a clean way is to create a throwaway branch.
Comparing a file from two branches: git diff <branch1> <branch2> <filename>

git index
~~~~~~~~~
Git index actually contains all files tracked - staged and committed.
Ref 1 - https://stackoverflow.com/questions/3516823/whats-the-difference-between-the-index-cached-and-staged-in-git/47543410#47543410
Ref 2 (See QA) - https://stackoverflow.com/questions/1587846/how-do-i-show-the-changes-which-have-been-staged

Git diff explanation
~~~~~~~~~~~~~~~~~~~~
The symbols --- and +++ represent what is used to describe the file.
@@ represents chunks.
-1,2 +1 means line one and two were changed in the first file and line one was changed in the second file.

Git edit upload commands
-------------------------------
git clone git@gitlab.com:shekkizh/Random_Sampling_Explore.git
cd Random_Sampling_Explore
cp ../rnd_cpy/random_sampling_experiment.m ./
cp ../rnd_cpy/main.m ./
git status
git add -A
git commit -m "fix for fully connected graph"
git push origin master
To push all branches: git push origin --all

View changes git
----------------
git log --graph

Time
----
date +"%r"

Accessing IMAP mail server using openssl
----------------------------------------
reference: https://delog.wordpress.com/2011/05/10/access-imap-server-from-the-command-line-using-openssl/, https://2paisasbyviggy.wordpress.com/2009/06/11/accessing-imap-email-accounts-using-telnet/
openssl s_client -connect imap.iitb.ac.in:993
tag login <username> <password>
tag LIST "" "*"
tag SELECT INBOX
tag logout

Using IMAP to download mails
----------------------------
From http://www.linux-magazine.com/Online/Blogs/Productivity-Sauce/Back-up-Email-with-a-Single-Command
./imapgrab.py -l -s imap.mail.server -u username -p password
./imapgrab.py -d -v -M -f /home/user/emailbackup -s imap.mail.server -u username -p password -m "_ALL_,-INBOX.Trash,-INBOX.Junk Mail"
./imapgrab.py -l -s imap.mail.server -S -p 993  -u username -p password

cal -m august

Rotate screen in ubuntu
-----------------------
xrandr --output LVDS1 --rotate left
xrandr --output LVDS1 --rotate right
xrandr --output LVDS1 --rotate inverted
xrandr --output LVDS1 --rotate normal
Find display information: xrandr

Screen resolution
-----------------
xdpyinfo  | grep 'dimensions:'

Backup a folder into hard drive
--------------------------------
rsync --progress --human-readable --recursive --verbose ./books/ /media/jinkx/TOURO\ Mobile/MintUrgentBackup/books
To view changes that will be made: rsync --progress --human-readable --recursive --verbose --dry-run --itemize-changes --delete ./books/ /media/jinkx/TOURO\ Mobile/MintUrgentBackup/books
If you want to delete extraneous files from destination directory: rsync --progress --human-readable --recursive --verbose --delete ./books/ /media/jinkx/TOURO\ Mobile/MintUrgentBackup/books

Check if a program refuses to close, media refuses to eject, because a file is open: lsof | grep -i <program name>
or
lsof | grep -i <mount location>

Shortcuts
---------
Windows_key + ctrl + <Arrow_key>

Openssh server
--------------


Formatting
----------
lsblk
sudo dd if=/dev/zero of=/dev/sdb bs=4k status=progress && sync
sudo fdisk /dev/sdb, Then press letter o to create a new empty DOS partition table. Press letter n to add a new partition. You will be prompted for the size of the partition. Making a primary partition when prompted, if you are not sure. Then press letter w to write table to disk and exit.
lsblk
sudo mkfs.vfat /dev/sdb1
sudo eject /dev/sdb
Disks utility from the Linux mint menu is a convenient alternative to all these commands.

Burning an iso - sudo dd if=/tmp/artixbang-beta-070318.iso of=/dev/sdb bs=4M status=progress && sync

Naming: sudo mlabel -i /dev/sdb1 -s ::"LABEL HERE "

Extracting iso with 7z
----------------------
7z x ubuntu-12.04-desktop-amd64.iso -o/media/$USER/604A-00EA/

Disabling shutter sound ubuntu
------------------------------
sudo mv /usr/share/sounds/freedesktop/stereo/camera-shutter.oga /usr/share/sounds/freedesktop/stereo/camera-shutter-disabled.oga

# XFCE
## Shortcuts xfce
Installed whisker menu - sudo apt-get install xfce4-whiskermenu-plugin
Removed applications menu from the panel
Workspace move - Window manager
Start menu popup - Settings->Keyboard->xfce4-popup-applicationsmenu
Applications menu settings -> Uncheck 'show buttons title'
Add Applications finder and screenshot to the menubar
Delete the Panel at the bottom
Keyboard shortcuts xfce for volume ->
pactl -- set-sink-volume 0 +10%
pactl -- set-sink-volume 0 +10%
pactl -- set-sink-mute 0 toggle
For adding folders to Places(Downloads) menu add them in the file - ~/.config/gtk-3.0/bookmarks
Screenshot shortcut command:
xfce4-screenshooter -f
For getting all the options just - xfce4-screenshooter
Screensaver - Menu-> screensaver -> blank screen only
Suspend - xscreensaver-command -lock ; xfce4-session-logout --suspend
The suspend button is not locking the computer
For enabling the screen lock, make sure 'xscreensaver' package is installed and
bind the Locking key combinations to xflock4?
Change window manager xfce: Menu->Desktop Settings->Change it to xfwmm4 for faster window manager.
Adding users xfce:
sudo apt-get install gnome-system-tools
Users and groups
Open archive manager in xfce for a zip file - thunar ./<name>.zip &
File managers - Thunar, PCMan FM
Command line application start: <Binary file location of application> %f &
If connecting laptop to monitor is limiting the disply in top left corner: xfwm4 --replace. May have to press Ctrl-C after that if the command doesn't exit. If that doesn't work, make sure to turn off the laptop display from Displays.
To turn on password prompt at login: Check that ask for password is enabled in 'Users and Groups'. Check that manual login is enabled on Login window->Users.
Asking for keyring on booting: lock and unlock default keyring in passwords and keys and check the box automatically unlock when logged in
Find who all is logged in: who -u
Logout other users: pkill -KILL -u <loginname>

Printing
~~~~~~~~
Printer was not working, job was showing pending, and properties were showing stopped. Start menu->Printers->Right click on the printer->Enabled. Started working.
Also this printer does not have default usb cable to print so couldn't print via usb.

Disable activity logging ubuntu
-------------------------------
Menu->Privacy->Off

History
-------
vim ~/.zsh_history

Timed commands
~~~~~~~~~~~~~~
To run a command at a particular time
at 10:10
ls -l > /tmp/ls_output.txt
Ctrl-D
To avoid the prompt just do
echo "ls -l > /tmp/ls_output" | at 10:10
To view all at commands do: atq
To remove an at command do: at -r <at id>

Firefox
-------
always open in private mode: about:config -> Browser.privatebrowsing.autostart to true
do not close window on closing last tab: about:cnofig -> browser.tabs.closeWindowWithLastTab
focus on link bar - alt+D, ctrl+L,
Command to open window in private mode: firefox -private-window &
Directly open a link in a private mode: firefox -private-window <link> &

Google chrome
~~~~~~~~~~~~~
Incognito: google-chrome -incognito &

Opera in private mode
---------------------
Only option found was to give the command
opera --private &
on the command line.
For bookmarks: ctrl+shift+B -> Other bookmarks -> list, search

Move and Copy
-------------
Options for rsync
--remove-source-files -> moves the files from source to directory
--progress -> shows progress
-h -> Human readable
-v -> verbose
Never use --delete and --remove-source-files at the same time
rsync is slower than cp and mv for simple operations. But it excels when stability is needed or just some incremental copy is needed or there are a lot of files which mv cannot handle that fast.
For deleting empty directories in the source directory use
find . -depth -type d -empty -delete
Possible alternative to rsync
mv -uv, -u -> Update
mv only changes the address whereas rsync actually copies the files to the new destination.
There is no easy way to recursively sync directories other than rsync.
cp -nvr -> Nice recursive copy without copying already existing files
mv cannot do recursive merging, one point to keep in mind.
cp cannot delete files from source directory.
So if there is enough space to create a copy then just use cp and delete the source files, otherwise need to use the slower rsync and then delete the empty directories. rsync only copies/sends differences of files.
mv -v is a convenient option so that we know which files are being moved.
Find where a symbolic link is pointing: readlink <filename>. ls -l also does the job.
To delete a symbolic link, do: unlink <symlink name>

MATLAB
======
set(gca, 'LooseInset', get(gca,'TightInset')) - makes the figures tight
white: set(gcf,'color','w');
format compact for temporary command line compactness, Home->Preferences->Command window->Numeric Display->Compact-> Apply ok for permanent
Save images as png -> saveas(gcf,'Barchart.png');
whos <datastructure> - Memory usage
bsxfun
Along with clc, clear always delete all user defined paths and add the paths you need on the spot.
Always try to use parfor whereever you can, the same experiment runs in 1/n the time where n is the number of cores.
Define the rules for overwriting or not variables as the output of your program.
figure('units','normalized','outerposition',[0 0 1 1]) - Make figures fullscreen
Clear all is risky because it even clears all breakpoints.
exist('<filename>','file') - Checking if a file exists
Indexing matrices by specific locations - atry = zeros(3,3); atry(sub2ind(size(atry),[1,2,3],[1,2,3])) = 5.0;
Inverting colormaps in matlab: Eg. colormap(flipud(gray))
Matlab on command line: matlab -nodesktop -nosplash
MATLAB command to see how much memory does a variable take - whos
Exporting figures
-----------------
plot(<x>,<y>,'LineWidth',1.5)
set(gcf, 'Color', 'w');
set(gca,'fontWeight','bold');
export_fig <name>.pdf
save <name>.dat atry -ascii
export_fig(names{i},'-pdf'); - When the names are variables from a cell array named names
Close figures with specific numbers - close(i_1,i_2,...). close all figures - close all.
For using multiple axes in subplot just specify the axies you will be using as an array.
export_fig has a great facility of generating the image on transparent background. Example: "export_fig('/tmp/try1','-pdf','-transparent');. It works even for PDFs.
Close matlab editor m-files
---------------------------
com.mathworks.mlservices.MLEditorServices.closeAll
editorservices.closeGroup
e=editorservices.getAll; e.close
Doesn't work in the recent editions
To get a field of a structure using a function: getfield(<objectname>,'object member name')

To save a variable outside while debugging, do - assignin('<workspace name>','<variable name>',<variable value>);

Vim
---
case insensitive search /<word>\c
Opening file in new tab gvim:
In the gvim.desktop desktop file (/usr/share/applications/ for most GNU/Linux systems) look for the "Exec" line. It will probably be like this:
Exec=gvim -f %F
Change the Exec line to:
Exec=gvim -p --remote-tab-silent %F
You may also need to change the StartupNotify value to "false" if it is currently set "true", or your Vim may not respond properly when the file is already open in a tab.
New window -> :vsplit,:hsplit
Moving between windows -> Ctrl+W arrow,
Closing window -> Ctrl+W q.
Command for opening file in a new tab: --remote-tab
"+(p/y/d) for accessing the system clipboard
Block editing: (from https://somethingididnotknow.wordpress.com/2011/04/22/column-block-insertdelete-on-vim/)
move the cursor to the uppermost character (if you’re selecting lines the way down, bottom if you’re going up) before which you want to insert text
enter Visual Block Mode by pressing Ctrl+v (unless you mapped the paste action to it, in which case you probably already know how to column insert)
select the column using the arrow keys
press Shift+i (switching into Insert Mode)
type the text you want to insert (will be displayed only on the first line)
press esc two times
?????
Profit!
For copying to the system buffer use "+y and for pasting from the system buffer use "+p.
I want to use emacs as my defulat text editor because the shortcuts are easier to remember as commands. Starting file in emacs without opening a new instance is difficult as it requires a running server and using emacsclient. I'll just use vim for now and remember the shortcuts.
Vim move to the start of the file - gg, move to the end of the file - G.
Adding same letter <n> times :normal <n>i<letter>
Set line numbers: set number
To skip to a particular line: <linenumber>G or :<linenumber>Ctrl+Return
Find vim swap type of files: find <path> -type f -name "*.sw[klmnop]"
Find and delete vim swap type of files: find <path> -type f -name "*.sw[klmnop]" -delete

Find and delete files
---------------------
find . -name "*<name>*" -type f
find . -name "*<name>*" -type f -delete (This is useful when you want to recursively delete a particular filetype from a directory. rm -r does not work for that purpose.)
Find upto a depth: find . -maxdepth 4 -iname "*<expression>*"
Don't search file in a path( there were some warnings)(From https://askubuntu.com/questions/176010/exclude-some-of-the-find-results): find . ! -path "*<directory name>*" -iname "*<pattern>*"
For finding and deleting directories(and their contents) matching a particular name: find . -type d -name "*<name>*" -exec rm -rf {} +
Proxy to remove C and C++ executables. be careful can delete other files too: find . -type f -not -iname "*.*" -exec rm '{}' \;
Usually bash commands like grep use globbing instead of regexp. The default find command uses globbing. To use regexp specify the option regexp along with posix option for easier regexp as follows:
find . -regextype posix-egrep -regex '<Regular expression>'
But for find if you want to avoid a particular set of files it is much easier to use multiple commands as follows:
find . -type f -not -iname "*.azw" -not -iname "*.mobi" -not -iname "*.pd*" -not -iname "*.txt*"
If we are only interested in the directories one level deep or deeper, the following command is useful:
find . -type d -mindepth 2
locate <filename> also works in a similar way but it is a system level find(I think).
Find files within two dates: find -newerct "10 Aug 2016" ! -newerct "10 Aug 2017" -ls > /tmp/find_output.txt
For modification time search: find -newermt "10 Aug 2016" ! -newermt "10 Aug 2017" -ls > /tmp/find_output.txt

Disabling open window after inserting usb
-----------------------------------------
dconf-editor: org->gnome->desktop->media-handling->automount-open(uncheck)
For mate: org->mate->desktop->media-handling->automount-open(uncheck)
Doing these does not help xfce. For xfce, open home->Edit->Preferences->Advanced-?Configure management of removable drives and media->(Removable drives and media opens up)->Uncheck browse removable media
(Or simply search Removable drives in the system search tool and do the modification there)

Settings usually take effect when the application that usues them is closed and opened.

Operating system information
----------------------------
cat /etc/issue
cat /etc/linuxmint/info
cat /etc/os-release
inxi -S

Thumbnail problems
------------------
Can be solved by just deleting the thumbnails as follows:
rm -rf ~/.cache/thumbnails/

Convert epub to pdf
-------------------
Install calibre, run:
ebook-convert <input_filename>.epub <output_filename>.pdf

### Convert text files to images
Reference - https://unix.stackexchange.com/questions/138804/how-to-transform-a-text-file-into-a-picture
soffice --convert-to png --outdir <output directory> "<input file path with file name>" && mogrify -trim -bordercolor "#FFF" -border 10 +repage <output path and filename>.png
convert -size 360x360 xc:white -font "FreeMono" -pointsize 40 -fill black -annotate +50+50 "<text to convert>" <output filename>.png

Extract text from pdf
~~~~~~~~~~~~~~~~~~~~~
pdftotext <input_filename>.pdf <output_filename>.txt
gs -sDEVICE=txtwrite -o <output_filename>.txt <input_filename>.pdf

Where is the bin file located
-----------------------------
where <command_name>

System commands
---------------
sudo reboot
systemcl suspend
mount - shows information on mounted devices

Soft reboot
R: Switch the keyboard from raw mode to XLATE mode
E: Send the SIGTERM signal to all processes except init
I: Send the SIGKILL signal to all processes except init
S: Sync all mounted filesystems
U: Remount all mounted filesystems in read-only mode
B: Immediately reboot the system, without unmounting partitions or syncing

pdftk manipulations
-------------------
Join multiple pages: pdftk pg_1.pdf pg_2.pdf pg_3.pdf cat output pg_all.pdf
Rotate a page by 180 deg: pdftk pg.pdf cat 1-endsouth output pg1.pdf
Rotate by 90 degrees clockwise: pdftk <input filename>.pdf cat 1-endeast output <output filename>.pdf

Information of a pdf file
~~~~~~~~~~~~~~~~~~~~~~~~~
Count the number of pages: pdfinfo <filename>.pdf | grep Pages
Page size is also available with pdfinfo.

wifi start for antergos
-----------------------
sudo modprobe brcmsmac

mirror problem antergos
-----------------------
sudo pacman -S pacman-mirrorlist antergos-mirrorlist
sudo reflector -l 30 -f 15 --save /etc/pacman.d/mirrorlist
suggested by arch linux -> reflector --verbose --latest 5 --sort rate --save /etc/pacman.d/mirrorlist
sudo cnchi -dv

Orage clock
-----------
%I:%M %p

Stripping image of metadata
---------------------------
sudo apt-get install libimage-exiftool-perl
exiftool -all= <image_name>.jpg

ppa-purge - sudo ppa-purge ppa:whatever/ppa

Temperature -
sudo pacman -S lm_sensors
sensors

If linux breaks after a long upgrade and some packages are held back install those using: sudo apt-get install <names of packages>, then do maintainence commands like autoremove, update, upgrade.

Some info commands
------------------
lscpu
Bluetooth: lsusb | grep -i blue, dmesg | grep -i blue

Download files on a webpage
---------------------------
wget --no-parent -r <page_link>
options: --random-wait, -U mozilla, -l 2(depth of recursion), -p (prerequisites), -k (convert links for local viewing),
wget  -r -p   http://www.example.com

Unzip multiple files
--------------------
unzip '*.zip'
Undo an unzip:
For files: unzip -l freemind-bin-max-1.0.1.zip |  awk 'BEGIN { OFS="" ; ORS="" } ; { for ( i=4; i<NF; i++ ) print $i " "; print $NF "\n" }' | xargs -I{} rm -vr {}
For files and directories: unzip -l freemind-bin-max-1.0.1.zip |  awk 'BEGIN { OFS="" ; ORS="" } ; { for ( i=4; i<NF; i++ ) print $i " "; print $NF "\n" }' | xargs -I{} rm -v {}

Color code ls command output
----------------------------
Add the following to zshrc:
alias ls='ls --color=auto'
alias rm=gvfs-trash : Removed this alias because I want rm to work as it is, instead installed trash-cli using
sudo apt-get install trash-cli, which has command trash <filename>,trash-list,trash-empty. It still doesn't work for my laptop though I think there might be some problem with the trash directory.
Use 'ls -d */' to just list the directories.
Use 'ls -l | egrep -v '^d'' to list only files.
Use 'ls -I "*.py" -I "*.m"' to exclude files with extension py and m.

Ubuntu package management
~~~~~~~~~~~~~~~~~~~~~~~~~
* Adding a repository: sudo add-apt-repository ppa:ubuntuhandbook1/apps
* Removing a repository: sudo add-apt-repository --remove ppa:ubuntuhandbook1/apps
* List the added ppas: apt policy
* List packages installed by snap: snap list
* Install: snap install <package name>
* For a less secure access to home install: snap install <package name> --classic
* Remove: snap remove <package name>
* Purge a package: snap remove --purge <package name>
* The new apt command merges apt-get and apt-cache functionality and adds features.

Update zshrc without logging out - source ~/.zshrc

# Flatpak
* List installed applications: flatpak list
* Run application: flatpak run <application ID> &

zsh features
------------
To cd into /usr/local/bin/ just type /u/lo/b and then press tab

Move file/directory to trash - gvfs-trash <filename>, from the package gvfs-bin

Search for pattern inside multiple pdfs - pdfgrep -HiR 'pattern' /path
Search for pattern inside multiple text files - grep -nr --color '<path>' -ie '<pattern>'
To search for whole words grep -nrw --color '<path>' -ie '<pattern>' (Note: Do not use wildcards in the pattern here, do not use w if do not want to match entire word.)
Exclude binary files from search, use: -I
Exclude directory from search --exclude-dir='<directory pattern>'
Exclude file from search --exclude='<file name pattern>'
Save colored output from grep: ls | grep --color=always -i "<pattern>" > <output filename>
Save html viewable colored output: ls --color=always | aha > <filename>.html

If screen becomes big/zoomed in then press Alt+Mouse wheel.

Input methods
-------------
xinput list
To disable keyboard
Open terminal, open onscreen keyboard
xinput disable "AT Translated Set 2 keyboard"
xinput enable "AT Translated Set 2 keyboard"
Think about how to deal with the click buttons trackpad - Mouse buttons still work
xinput disable "ThinkPad Extra Buttons" does not disable onboard mouse buttons

Convert jpg to pdf
------------------
convert a.jpg a.pdf
Had to change the line from /etc/ImageMagick-6/policy.xml "none" to "read|write"
Convert .cr2 to jpg - sudo apt-get install ufraw-batch, ufraw-batch --out-type jpeg <image name>.CR2

Date and time - date +%d_%b__%r
For rainlendar - %d.%b.%Y(date format), %#I:%M %p(time format), %a %d %b(event list header format)
Time in India - TZ=Asia/Kolkata date

Count number of files in the current directory - ls -1 | wc -l
List ls output by columns: ls -C, rows: ls -x
Parse the numbers correctly while file globbing using ls ./*: ls -v ./*

Change hard disk name - umount, disks, edit filesystem

Compare strings zsh - [ "<your text string 1>" = "<your text string 2>" ] && echo "valid" || echo "invalid"

Windows
-------
Making windows faster - (Windows 7) My computer -> Properties -> Advanced system settings -> Advanced -> Settings -> Visual effects -> Adjust for best performance. -> Apply. OR Control Panel -> System -> ...

cmus
----
Add songs directory - :add <Directory path>

Transfer files from android
---------------------------
Apaprt from putting the files online and then downloading them a better way is through usb. But usb doesn't always transfer all kinds of files. Media files are always available for transfer. So if you have a text file you want to transfer, put it in the camera folder, change its extension name to .jpg and now it will be visible in the files to transfer. After transferring change the extension to .txt.

Android
-------
Disable google news on android: Click screen -> settings -> *Disable* Display discover
Delete a page android - Do the pinch gesture, home screens will appear, remove them one by one.
Adding clocks - long tap home screen -> Widgets -> Add multiple cities widget. My mobile: Add digital clocks widget to homescreen, expand the widget.
I'm feeling lucky corner swipe feature - Caused by ES file explorer. Uninstalled it too intrusive.
Duckduckgo on mobile - Visit DDG, Chrome setting, Search engine, recently visited.
Block cookies - Chrome -> site settings, cookies, blocked.
Even after disabling google assitant, mobile was listening to OK GOOGLE, so went to Settings -> App permissions -> Microphone: Disbled Camera and google permissions to microphone.

Python
------
type()
range()
for x in range(10):
a[i] = j
print("I am")
print('The value of x is {} and y is {}'.format(x,y))
For checkign python version: print(sys.version)
Symbolic functions in python
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
from sympy import Symbol
f1 = lambda x: x**2
xx = Symbol('x');
f1(xx)
f1(xx).diff(xx)
f1(xx).diff(xx).subs(xx,1)
When is a module imported and which do we have to explicitly import??? Because diff, subs seem to be valid even if we don't import the entire sympy.
Another way of defining a symbolic function is just define your symbols and then define the function as an expression using those symbols.
For example if xx,yy,zz are defined symbols then f3 = mp.e**xx-mp.e**yy+zz-3 is a valid function.
For printing symbolic functions simply do print(f3)
Multiple substitutions: f2.subs([(xx,1),(yy,2)])
Printing
~~~~~~~~
To avoid the newline at the end, for python 3, print(<stuff to print>, end=" ")
Memory info
~~~~~~~~~~~
To know the memory location of a particular object, do 'list(map(id, <object name>))'
PDB
~~~
When in debugger, to list all the breakpoints, simply type 'b'.
Breakpoints are placed in files. To specify a filename to place a breakpoint, do 'b <filepath/filename>:<line number>'
To stop code execution at the particular point and enter the debugger, do 'pdb.set_trace()'.

Using viztracer
~~~~~~~~~~~~~~~
python3.6 -m viztracer -o <output name>.html --log_var <variable name> -- <program name.py>

Java
----
Version: java -version

JSON
----
Filtering json
~~~~~~~~~~~~~~
cat <filename>.json | jq '.<attribute name>'
cat <filename>.json | jq '.<attribute name>[<array slice>] .<attribute 2 name>'

Convert pdf to jpg images
-------------------------
(Credits https://askubuntu.com/questions/50170/how-to-convert-pdf-to-image)
pdftoppm <inputfilename> <outputname> -png
Convert them back to pdf
~~~~~~~~~~~~~~~~~~~~~~~~
convert *.png <outputname>.pdf
Check order concatenation: echo *.png

Convert heic to jpg
~~~~~~~~~~~~~~~~~~~
Using the app - for file in *.HEIC; do heif-convert -q 100 $file ${file/%.HEIC/.jpg}; done

Changing permissions
--------------------
Adding a permission from group (say execute)
chmod g+x <filename>
Deleting a permission from user (say read)
chmod u-r <filename>
Primary protection from deletions:(Remove the write permissions from all, then it will ask you before deleting a write protected file)
chmod ugo-w <filename>

Sorting the space consumed by files: (https://serverfault.com/questions/62411/how-can-i-sort-du-h-output-by-size) du -h | sort -h
To find the space available: df -ha, or df -H

Foxit pdf reader
----------------
Disable javascript: Tools -> Preferences -> Javascript(uncheck) (Didn't find this in my linux foxit but that's the internet solution)


Bash arithmetic: can be done but is painful. If you want to see the result of 3+4 the quickest way is $((3+4)). Arithmetic operations with variables do not need variables to have $. for example for printing the value of a+3 we just do $((a+3)) not $(($a + 3))
For printing the value of any variable have to do echo. For substituting the value of the variable have to do $<variable name>

Loops bash
----------
While loop example:
x=1
while [ $x -le 5 ]
do
  echo "Welcome $x times"
  x=$(( $x + 1 ))
done

Looping over sub-directories in bash
for dir in ./*/
do
dirn=${dir%*/}
done

for loop, array for for loop, -le flag,

Disable history for a bash session: set +o history
Clear bash history: history -c

ADB
---
adb shell getprop ro.build.version.serial (I think for the device ID)

Execute commands if file exists linux
-------------------------------------
FILE=/etc/resolv.conf
if test -f "$FILE"; then
    echo "$FILE exist"
fi

OR

FILE=/etc/resolv.conf
if [ -f "$FILE" ]; then
    echo "$FILE exist"
fi

Linux android usb connect
-------------------------
adb devices
adb root
adb shell commands very useful
To flash a new firmware: adb sideload <firmware>.bin

Processes analyse: htop (with \)

basename <filepath> : This strips the filename of it's filepath. Eg. basename "$(pwd)/atry.txt"
Opening a file read-only: Use cat command.
Creating a text file with your content via command line: echo "atry" > btry.txt

Edit command - edit /tmp/atry.txt, opens up the file in the text editor ex.

Beamer
~~~~~~
Notes in beamer can be written as follows:
\note[itemize]{
\item point 1
\item point 2}
\note{Points}
To view - pdfpc

Solving package errors by dpkg
sudo dpkg -l | grep -i ^..r
remove force remove

Http internet requests
~~~~~~~~~~~~~~~~~~~~~~
sudo tcpflow -p -c port 80 (Doesn't seem to work)
sudo tcpdump dst port 80 (Doesn't seem to work)
netstat -nputw (only shows ip addresses pinged)

Adb
~~~
To view android files I need to enable 'usb debugging'

Check ram linux
~~~~~~~~~~~~~~~
* free -m (m is for ram in mbs)
* vmstat -s

Bypass imgur - /embed?pub=true at the end

See the download size of a package download in ubuntu - sudo apt-get --no-download --assume-no install <package-name> ( This does a dry run )

For the git EOF errors - https://stackoverflow.com/questions/21277806/fatal-early-eof-fatal-index-pack-failed.

Latex
~~~~~
Label for figures comes after the caption.

Execute a time taking command via ssh - Eg. nohup matlab -batch "myscript" (https://www.mathworks.com/help/matlab/ref/matlabwindows.html#f7-621863-option1optionN)
Nohup gives a lot of problems, I'm going to try screen.
To know whether I'm in a screen or not,
echo $TERM - returns xterm or something similar if a terminal, otherwise just returns a screen.
echo $STY - returns nothing if normal terminal, screen if it's a screen.
screen is an extremely stable command so will use it compared to any other like tmux. Also the notations of screen are very easy to learn.
Packages
~~~~~~~~
subfig -> \subfloat
subcaption -> \begin{subfigure}
The subfig package is usually preferred over subcaption https://tex.stackexchange.com/questions/13625/subcaption-vs-subfig-best-package-for-referencing-a-subfigure wherever it works.
IEEE may enforce subfig.

ssh
~~~
To disconnect from an ssh connection, Press Enter, ~, .
To suspend from an ssh session, Press Enter, ~, C-z
Normal characters are forwarded over the ssh session, so we need to use special characters like the above.
Sometimes disconnecting the connection results in termination signal for the program in screen. To avoid that, just suspending the ssh service works.
Sometimes when I try to connect to a screen using screen -r command it says "There is no screen to be resumed matching". This behavior actually results from using multi-display mode. When you detach a screen session on multi-display, it will only detach on the current terminal. In my case it usually happens if the screen was started from another ssh session or terminal which did not detach before the session closed I think. Using -x instead of -r helps.
'echo $TERM && echo $STY && screen -ls' helps to know whether I'm in a screen. For tmux it is 'echo $TERM && echo $STY && tmux ls'
For screen logging use -L option.
To enable scrolling in screen do C-A Esc -> scroll -> q
If for some reason ssh key of host machine has changed and you need to update key on the client machine: ssh-keyscan -t ecdsa 128.125.20.97 >> ~/.ssh/known_hosts

To crop margins from pdf - pdfcrop --margins '-<left> -<top> -<right> -<bottom>' input.pdf output.pdf. This forcefully crops the margins. pdfcrop input.pdf output.pdf does not forcefully crop the margins.
Briss is an awesome tool to crop margins. Run it using 'java -jar briss-0.9.jar'

VPN
~~~
Restart when hung up - 'systemctl restart nordvpnd' or 'systemctl --global restart nordvpnd'
Seeing status - 'systemctl status nordvpnd' or 'systemctl --global restart nordvpnd'
'systemcl list-units' seems to list
None of this seems to work, but changing UDP to TCP seems to work.
This works for restart after internet connection restart: service nordvpnd restart
UDP protocol is at least 10 times faster. Use it whereever possible. Especially in video calls.

Network status: sudo systemctl status networking
Following helps after suspend: sudo systemctl stop nordvpnd, sudo service network-manager restart, service nordvpnd restart

Dropbox
~~~~~~~
To exlude a particular directory from downloading to a computer, do
dropbox exclude add <directory path>
To view a list of such excluded directories, do
dropbox exclude list
To start syncing a directory again from the main dropbox directory, do
dropbox exclude remove <directory path>

Jupyter notebook launch
'jupyter notebook'
For a jupyter notebook for a specific python version, say 3.6: python3.6 -m noteboook

Ipython
-------
Start Ipython shell: python3.6 -m IPython
List files: !ls or %ls
Change directory: %cd <new directory>
Run ipython scripts: python3.6 -m IPython <scriptname>.ipy
Set a breakpoint: %debug -b <filename>.py:<linenumber>
turn on pdb: %pdb on
turn off pdb: %pdb off
To start a function in debug mode: %debug <function> After this you can use the standard debugging commands.
cat bash command, but from ipython: %cat <filename>

Linux and users
~~~~~~~~~~~~~~~
To find details about users
id <username>
groups <username>
finger <username>
getent passwd <username>
grep -i <username> /etc/passwd
lslogins -u
users
who -u
w
last
lastlog
Change your password - passwd

tmux
~~~~
List screens - tmux ls
Starting a new session: tmux new -s <session name>
Starting a new session in a directory: tmux new -s <session name> -c <directory path>
Starting a new session without attaching to it: tmux new -s <session name> -d
Starting a new session without attaching to it and run a command: tmux new -s <session name> -d '<command>'
For example to start a dropbox: tmux new -s dropbox -c ./downloads -d './dropbox.py start'
Attaching a screen by number - tmux attach-session -t
Detaching from a session - Ctrl-b + d
Split current pane vertically into two panes - Ctrl+b "
Tmux does not have looging by default. To know whether you are in a tmux session, check whether there is a green bar at the bottom.
To close a tmux session Ctrl-b + : then enter kill-session and press enter.

Alternative grammar checker option:
* Use libreoffice write grammar checker. (Tools-> Spelling and grammar, options, grammar as you type). Or with abiword. Install abiword-plugin-grammar. Edit-> Preferences -> Spell checking -> Check grammar as you type.
* Check whether all sentences have full stops.
textidote --check en --output html input.tex > report.html

For scaling pdfs, pdfscale very useful - https://github.com/tavinus/pdfScale.

Whenever you are executing a file via command line and the command line says file does not exist, it is possible that the dependencies/libraries that the file uses do not exist.
To run a 32 bit application on the 64-bit computer you need to install some i386 libraries.
To find what libraries are required run ldd <executable name>

To see the memory consumption of the system, run the following command.
free -mt -c 1000

Docker
~~~~~~
For mounting a particular
docker run -it --name <dockername> --mount type=bind,source=<machine path>,target=<docker path> --rm --gpus all <id of docker>

Tiling images
~~~~~~~~~~~~~
montage a.png b.png -geometry <width>x montage_output.png

To check the RAM slots in the machine, 'sudo lshw -class memory'
To just dump all hardware information, do - 'sudo lshw'

Extracting printable strings from a mixed file: strings <filename>. For example strings .git/index

Installing and using Anacondaconda
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wget https://repo.anaconda.com/archive/Anaconda3-2020.07-Linux-x86_64.sh
./Anaconda3-2020.07-Linux-x86_64.sh
conda init
conda info
cd ~/anaconda3/

Update conda: conda update -n base -c defaults conda

conda list
conda config --set auto_activate_base False
Create an environment: conda create --name <env_name>
Create an environment for specific python: conda create --name <env_name> python=<version number>
Start the environment: conda activate <env_name>
Install package: conda install <package_name>
List of packages: conda list
List of environments: conda env list
Info on environments: conda info --envs
Activate an environment: conda activate <env_name>
Deactivate and environment: conda deactivate
Remove an environment: conda env remove --name <environment name>
Package search: conda search Tkinter
Package install: conda install Tkinter
If not available via regular install: conda install -c conda-forge pygsp
If you don't run conda init you've to just run:
~/anaconda3/bin/conda
instead of conda.

eval "$(/home/jinkx/anaconda3/bin/conda shell.zsh hook)"
~/anaconda3/bin/conda init zsh

Uninstall conda:
rm -rf ~/miniconda
OPTIONAL: Edit ~/.bash_profile to remove the Miniconda directory from your PATH environment variable.
OPTIONAL: Remove the following hidden file and folders that may have been created in the home directory:
.condarc file
.conda directory
.continuum directory
By running:
rm -rf ~/.condarc ~/.conda ~/.continuum

~/anaconda3/envs/for_smop/bin/smop -o /tmp/trymatlabconvert/solver.py --verbose -N ~/Dropbox/USC/graph/code/loc2wts.m
User installations usually default to ~/.local/

Don't use setup.py install without a record.

pip automatically inside the conda virtual environment.

Libre office calc
~~~~~~~~~~~~~~~~~
Opening a document from the commandline: libreoffice --calc <document name> &
=COUNTA(A1:A10) gives the number of non-empty cells between 1 and 10.
=COUNTIF(A1:A10, 2) counts the number of times 2 appears in the range of those cells.
 =COUNTIF(C43:AK43,">0") Counts the number of cell values greater than 0.
=ISNUMBER(MATCH(2;A1:A10;0)) checks if 2 appears in the range of the cells.
=SUM(B14, B29, B38, B50) sums up the cells given by arguments.
=SUM(B14:B20) sums up the cells given by argument array.
To keep a column fixed as you scroll, select a column to the right of the column. View->Freeze columns and rows.
To move a row, ctrl+alt and drag for moving row.(this is not working)
To have a sum formula for entire column, do it for one row and copy and paste that cell throughout the column.
To concatenate columns corresponding to the same rows, use Shift and Ctrl intuitively.
To transpose columns: Select cell range, cut, click the starting cell, edit->paste special, Paste all and transpose.
If you don't want to explicitly write the cell ranges, just select the cell where you want to insert the result. Do Insert->Function, select the function you want to insert and insert the cells by selecting them.
Moving columns(applies to rows too): Select the entire column. Click on a cell inside the column. Drag where you want it. Press Alt before leaving the click. Release mouse. Release Alt.

Standard regexp
~~~~~~~~~~~~~~~
[^{] Match the abscence of { character.
. Matches any character usually excluding newlines.
[^a-zA-z0-9] Matches anything but the those in the lists included in []
Pattern to match r inside two dollar signs and avoid the rest of rs: \$[^\$]*(?<!no)(?<!inne)(?<!rightar)(?<!righta)(?<!sta)(?<!\\)(?<!\\)(?<!\\pe)(?<!\\a)(?<!\\p)(?<!\\f)(?<!\\dagge)(?<!mat)r(?!ecF)(?!ansp)[^\$]*\$
\\begin{equation.*}[^\$]*(?<!no)(?<!inne)(?<!rightar)(?<!righta)(?<!sta)(?<!\\)(?<!\\)(?<!\\pe)(?<!\\a)(?<!\\p)(?<!\\f)(?<!\\dagge)(?<!mat)r(?!ecF)(?!ansp)[^\$]*\\end{equation.*}
Search for two words in a text file in linux: cat <filename> | grep -E 'word1|word2'
-E flag for grep gives us the extendend regexp support and -F limits grep to string search which makes it faster.
Remember that parenthesis capture by default.
Remember that character classes are their own mini language.
## Emacs regexp
Removing set trace python commands: # +pdb.set_trace()C-qC-j
Adding spacing before and after = sign. \([[:alnum:]]\)=\([[:alnum:]]\) → \1 = \2 or \([^ ]\)=\([^ ]\) → \1 = \2
Adding spacing after comma if it doesn't already exist: ,\([^ ]\) → , \1
If numpy library is not prepended, prepend it: \([^.]\)arange → \1np.arange
Replacing , <number> or ,<number> by , <variable name> can be done by: , *[[:digit:]] -> , <variable name>
Searching citations with emacs regexp: \[[[:digit:]]+\]
Replacing == <number> with [<number>] == 1:  == \([[:digit:]]+\) → [\1] == 1
## Python regexp
* Extract textcolors from latex: r"\\textcolor\{blue\}\{.*\}"
TODO
~~~~
* How to search patterns and extract lines using emacs or bash?
* What does [A-Z] mean in emacs regexp?
* How to exclud pattern from regexp?
* Think about how to add tag functionality for organizing files.
* Use and document how good is Viztracer for logging without changing source code.
* Understand the notation of rsync itemize flag output
* How to match the first occurence of a pattern?

Devices
=======
iPad
----
* Double home button for listing all the apps
* Single tap home button for return to homescreen
* Long press top button for switch off or switch on
* To remove an account: open gmail, manage accounts, and remove account from this device

Backups
-------
du --human-readable --max-depth=1 ~/ | sort --human-numeric-sort
To know used space, available space and total space: df --human-readable ./
In order of large directory spaces, go one level deeper. Move the data somewhere else and run the command again until there is barely KBs of data.
Sync dropbox and unlink:
dropbox start && (echo "dropbox stop" | at now + 15 mins) && (echo "mv ~/.dropbox <backup dir>/.dropbox.old" | at now + 30 mins)
Check desktop for any temp files:
ls -a ~/Desktop
This includes directories it couldn't traverse:
References:
https://stackoverflow.com/questions/815668/how-to-list-non-empty-subdirectories-on-linux
https://askubuntu.com/questions/935377/how-to-filter-du-output
https://stackoverflow.com/questions/9794791/how-to-get-total-size-of-folders-with-find-and-du
find ~/ -mindepth 1 -maxdepth 1 -type d -not -empty | xargs du -h --max-depth=0 | sort -h
Can do a separate command for files or add it to this.

# Windows
## Ram details
wmic MEMORYCHIP
wmic MEMORYCHIP get BankLabel, DeviceLocator, MemoryType, TypeDetail, Capacity, Speed
wmic memorychip list full
systeminfo | findstr /C:”Total Physical Memory”
systeminfo |find “Available Physical Memory”
Using powershell: Get-WmiObject Win32_PhysicalMemory | Format-List *
