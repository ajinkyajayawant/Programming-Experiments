# 2
## Method
Algorithm wise seems a straightforward problem.
Brute force: compute the sum by traversing the linked lists simultaneously
## Decomposition of functions
## Questions
- How to create a new list
- How to traverse lists simultaneously
- What does the colon notation mean
- How to detect end of list?
- What was the data structure Optional? I didn't understand

# 6
## Method
Have lists for different rows. Process the string character by character and doing an operation like modulo, fill in the lists.
## Questions
- How to create(in one shot) a dictionary with keys given by indices?
- How to iterate a string?

# 15
## Method
- Basic iteration by recursively solving. Hold one index and pass the rest of the array for another criteria.

# 16
## Method
- Similar to problem 15

# 17
## Questions
- When strings are spliced do we create new strings or are they part of the original string?

# 19
- After writing individual functions for the list length, getting the 2nd node after, it is easy to remove the node in-place or create another list.
## Questions
- To pass reference to a node in the list, we should just return that object? Or is there any different syntax?

# 347
## Questions
- Is there any built in frequency counter function in python?

# 437
## Method
- Can be solved in a recursive way

# 1504
Didn't get this. Didn't get even after two hints. Didn't have a clue what category/type of problem it is.

# 1535
- Seems just like a simulation

# 1802
Tough for me in the first attempt.
## Method
- On thinking again seems more like a math problem than a programming problem.

Hackerrank
# Mini-max sum
This question is specific to when you want to leave out one element.
Loop over the array to find the minimum or the maximum element. In the same loop, sum over the elements of the array. At the end remove the minimum or the maximum element and report the remaining sum.
Brute force method to selve the problem is to sort the array and drop the first or the ending elements.
If the question is asked for dropping more than one element then brute force method of first sorting is easy.
# Palindrome
This is a problem which requires multiple functions.
To find the largest palindrome using substrings from two strings.
Find write a function to find if a word is a palindrome. For this use a function to check if a string is the reverse. Use standard string operations to reverse and compare strings.
The try to find substrings with lengths starting from the largest possible.
