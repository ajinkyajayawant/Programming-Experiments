This document consists of the commands that I have found useful for computer maintenance or programming tasks.

* Linux
** Directory structure
*** Paths where softwares and libraries are installed
#+BEGIN_SRC shell
/usr/local/
/usr/
~/.local/
#+END_SRC
** Operating system information
Sometimes when you are looking at package compatibilities, thinking of installing a new system, it helps if you can quickly look up the details of the current system. That can be achieved with:
#+BEGIN_SRC shell
cat /etc/issue
cat /etc/linuxmint/info
cat /etc/os-release
inxi -S
#+END_SRC
** Moving around
Change directory into previous directory:
#+BEGIN_SRC shell
  cd -
#+END_SRC
See the directory structure:
#+BEGIN_SRC shell
tree
#+END_SRC
** Apt package manager
Usually it is convenient to update, upgrade, and atuoremove at the same time. For that
#+BEGIN_SRC shell
sudo apt update && yes | sudo apt upgrade && sudo apt autoremove
#+END_SRC
** Grub
Sometimes either intentionally or by mistake, you replace the bootloader that came with the computer when you bought it, with Grub. Grub is the bootloader for distributions like Ubuntu which are derived from Debian. Moving forward for live USB installation or errors while bootloading, it is necessary to be able to work with grub. Here are a few commands and procedures that I have found useful.
- Press escape for the grub menu to appear
- Use ls to see the hardware disks available
- Use cat to see contents of files:
  #+BEGIN_SRC shell
    cat (hd0)/boot/
  #+END_SRC
- To see the files from a particular disk, do:
  #+BEGIN_SRC shell
    ls (hd0)/boot/
  #+END_SRC
  and press tab to see options
- To specify the OS to boot from the usb do:
  #+BEGIN_SRC shell
    set root=(hd0) <or other diskname as needed>
    chainloader (hd0)/efi/boot/grub64.efi
  #+END_SRC
To invoke the new bootloader:
#+BEGIN_SRC shell
boot
#+END_SRC
** Miscellaneous sytem tasks
Get the time:
#+BEGIN_SRC shell
date +"%r"
#+END_SRC
Backlight to minimum:
#+BEGIN_SRC shell
xbacklight -set 10
#+END_SRC
Turn off display(can be set up as keyboard shortcut shit+F1)
#+BEGIN_SRC shell
xset dpms force off
#+END_SRC
To interchange two keys on keyboard:
#+BEGIN_SRC shell
xev
# (state 0x10, keycode 110 (keysym 0xff55, Prior), same_screen YES,)
xmodmap -e "keycode 110 = Next"
setxkbmap -option ctrl:swapcaps
#+END_SRC
The last one always works for me. Needs to be run again after plugging in a new keyboard


* Softwares
** Git
Initialize git in a directory:
#+BEGIN_SRC shell
git init
#+END_SRC
*** Branches
Create a new branch:
#+BEGIN_SRC shell
git branch <new branch name>
#+END_SRC
Get all git branch details:
#+BEGIN_SRC shell
git branch -av
#+END_SRC
To rename a local branch, checkout the old branch and run:
#+BEGIN_SRC shell
git branch -m <new-name>
#+END_SRC
Or to rename from the master branch use the command:
#+BEGIN_SRC shell
git branch -m <old-name> <new-name>
#+END_SRC
Deleting branches locally when you mess it up
#+BEGIN_SRC shell
git branch -d <local_branch_1> <local_branch_2>
#+END_SRC
To delete a branch from the online repository:
#+BEGIN_SRC shell
git push <remote> --delete <branch>
#+END_SRC
Compare two branches git:
#+BEGIN_SRC shell
git diff <branch1>..<branch2>
#+END_SRC
