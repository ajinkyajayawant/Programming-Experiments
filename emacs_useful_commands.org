* Emacs
Open file in view/read only mode:
#+BEGIN_SRC elisp
M-x view-file
#+END_SRC
Convert and already opened file into view mode:
#+BEGIN_SRC elisp
M-x view-mode
#+END_SRC
view-file has its special shortcuts like q which exits the view mode. So a better solution in later versions of emacs is:
#+BEGIN_SRC elisp
M-x read-only-mode
#+END_SRC
To have a ruler on top of emacs to measure row width:
#+BEGIN_SRC elisp
  M-x ruler-mode
#+END_SRC
The variable that controls where the line will wrap is:
#+BEGIN_SRC elisp
M-x fill-column
#+END_SRC
To set the fill column variable you can use the function:
#+BEGIN_SRC elisp
  M-x set-fill-column
#+END_SRC
** Info
Find the version:
#+BEGIN_SRC elisp
M-x emacs-version
#+END_SRC
Count words and lines:
#+BEGIN_SRC elisp
M-x count-words
M-x count-lines
#+END_SRC
Show cursor position(especially column number) momentarily:
#+BEGIN_SRC elisp
M-x what-cursor-position
#+END_SRC
Find emacs uptime:
#+BEGIN_SRC elisp
M-x emacs-uptime
#+END_SRC
** Navigation
- Page up: M-v
- Page down: C-v
- One word forward: M-f
- One word backward: M-b
- Line up: C-p
- Line down: C-n
- Character forward: C-f
- Character backward: C-b
- Paragraph start: M-a
- Paragraph end: M-e
- Delete a word after the cursor: M-d
- Deleting the word before the cursor can either be done with C-Backspace or M-Backspace
- Command to go to a particular line: goto-line
** Editing
The cut, copy, and paste commands are the following in emacs:
Cut:
#+BEGIN_SRC elisp
M-x kill-region
#+END_SRC
Copy:
#+BEGIN_SRC elisp
M-x kill-ring-save
#+END_SRC
Paste:
#+BEGIN_SRC elisp
M-x yank
#+END_SRC
*** Rectangle commands
For cutting rectangle, mark one corner of the rectangle go to the other end and do
#+BEGIN_SRC elisp
M-x kill-rectangle
#+END_SRC
Copy a rectangle:
#+BEGIN_SRC elisp
M-x copy-rectangle-as-kill
#+END_SRC
Paste the copied rectangle starting at the position of cursor(no need to select the region here)
#+BEGIN_SRC elisp
M-x yank-rectangle
#+END_SRC
For inserting text in a rectangle:
#+BEGIN_SRC elisp
M-x string-insert-rectangle RET string RET
#+END_SRC
Replace rectangle:
#+BEGIN_SRC elisp
M-x string-rectangle
#+END_SRC
** Buffer menu
Kill/save multiple buffers:
#+BEGIN_SRC elisp
M-x buffer-menu
#+END_SRC
Flag buffers for deletion using d
Flag buffers for save using s
Execute the commands with x
** Dired
Deleting backup files: Open dired, press ~​~​~ (flags all backup files), press ~x~, confirm
Deleting backup files recursively:
#+BEGIN_SRC elisp
M-x find-name-dired
#+END_SRC
select directory, file pattern ~*​~​~ and repeat the procedure above
Open file in read only mode from terminal:
#+BEGIN_SRC shell
emacsclient --create-frame --eval '(view-file "<filename>")'
#+END_SRC
A file opened from gui closes all the frames when I close that buffer. A better option is to create an emacsclient frame assuming a server exists:
#+BEGIN_SRC shell
emacsclient --create-frame &
#+END_SRC
Opening file from dired:
#+BEGIN_SRC elisp
M-x dired
#+END_SRC
specify directory, press enter on a file.
Creating a new diretory in dired mode - Once in dired mode press ~+~
Easy way to rename files in dired: Press ~R~, it prompts for the filename to rename to. Press downarrow if you want to access the earlier filename. Change the filename and press enter.
To rename files in dired:
#+BEGIN_SRC elisp
%R <original file name> <new file name>
#+END_SRC
Dired go up a directory: ~^~
Dired remove the delete flag: ~u~
** Tables
Insert table:
#+BEGIN_SRC elisp
M-x table-insert
#+END_SRC
Insert row:
#+BEGIN_SRC elisp
M-x table-insert-row table-delete-row
#+END_SRC
Insert/delete column:
#+BEGIN_SRC elisp
  M-x table-insert-column
  M-x table-delete-column
#+END_SRC
** Calculator
To start the calculator:
#+BEGIN_SRC elisp
M-x calc
#+END_SRC
For infix type of operations use apostrphe operator, for example: ~'2+3~
** Magit
To start magit run:
#+BEGIN_SRC elisp
  magit-status
#+END_SRC
To refresh the status, can use(g):
#+BEGIN_SRC elisp
  magit-refresh
#+END_SRC
To fold and unfold entries use ~TAB~
To see all the remotes, open a split window and use the command(y):
#+BEGIN_SRC elisp
  magit-show-refs
#+END_SRC
To fetch use the command(f):
#+BEGIN_SRC elisp
magit-fetch
#+END_SRC
To pull use the command(F):
#+BEGIN_SRC elisp
magit-pull
#+END_SRC
To checkout a branch use the command(bound to b):
#+BEGIN_SRC elisp
magit-branch
#+END_SRC
To delete branches, whether local or remote, point at that branch and give the following command(b m):
#+BEGIN_SRC elisp
magit-branch-delete
#+END_SRC
See an ascii visualization of commits and branches:
#+BEGIN_SRC elisp
magit-log
#+END_SRC
To stage(add) changes, go the the corresponding unstaged entry and use the command(s):
#+BEGIN_SRC elisp
magit-stage
#+END_SRC
To unstage changes (u):
#+BEGIN_SRC elisp
magit-unstage
#+END_SRC
To commit the changes(c):
#+BEGIN_SRC elisp
magit-commit
#+END_SRC
After the magit-commit command you will first get the diff buffer. If that is okay, press the ~c~ key which will then take you to the commit buffer.
After writing the text for the commit use the command:
#+BEGIN_SRC elisp
with-editor-finish
#+END_SRC
To save a stash use the following and follow up with the prompts(z):
#+BEGIN_SRC elisp
  magit-stash
#+END_SRC
Amend a commit:
#+BEGIN_SRC elisp
magit-commit-amend
#+END_SRC
It is easier to go through the commit menu by pressing ~c~ and then selecting the amend option using ~a~.
** Tramp
To start tramp, do ~C-x C-f~ and type the filename as
#+BEGIN_SRC elisp
/ssh:<username>@<host>:
#+END_SRC
Once you press the colon after the hostname it will ask you for the password and will
then connect you once you enter it.
To end tramp connections use the following command:
#+BEGIN_SRC elisp
tramp-cleanup-connection
#+END_SRC
To run octave on the remote machine just give the
#+BEGIN_SRC elisp
M-x run-octave
#+END_SRC
command when current directory is one of the remote directories.
** Org mode
The variable ~org-agenda-files~ holds the search paths for agenda files
Add the current file to agenda search list:
#+BEGIN_SRC elisp
org-agenda-file-to-front
#+END_SRC
- To move between TODO, DONE, unlabeled states, use shift left and shift right
If you want to see the TODO tasks from a list, use
#+BEGIN_SRC elisp
M-x org-show-todo-tree
#+END_SRC
- If you want to move back from the tree view to the full view, go to the header and press TAB
- Pressing TAB at a header sycles between only header, header and all bullets, header all bullets and descriptions.
- Doing Alt left and right moves the bullet one level deeper or outer.
- Doing Alt up or down moves the task up or down in the list spatially.
For opening the agenda view use the command:
#+BEGIN_SRC elisp
org-agenda
#+END_SRC
For selecting day/month/year view while in aenda mode use:
#+BEGIN_SRC elisp
v d/v m/v y
#+END_SRC
To enter a time stamp:
#+BEGIN_SRC elisp
org-time-stamp
#+END_SRC
- Deadline: You start seeing this early in the agenda view
- Scheduled: You start seeing this in the agenda view after the set date
- Plain timestamp: You don't see this in the agenda view after that date
To have an am/pm timestamp in org-agenda, toggle the variable:
#+BEGIN_SRC elisp
org-agenda-timegrid-use-ampm
#+END_SRC
Once you have set the custom time format in the ~org-display-custom-times~ or ~org-time-stamp-custom-formats~ variables, you can toggle the viewing of the time format with the command ~org-toggle-time-stamp-overlays~.
To set up or change priorities Use ~S-up~ or ~S-down~.
To set a tag use the command:
#+BEGIN_SRC elisp
org-set-tags-command
#+END_SRC
To isolate all the tasks for a tag, do:
#+BEGIN_SRC elisp
M-x org-agenda m
#+END_SRC
To view agenda for specific week, go to the agenda view and type: ~v <week number> w~
- To find the week number of the current week, look at the topmost line when in the org-agenda mode
- When you use scheduled or deadline it automatically appears in your agenda till you mark it done. You don't need to mark it todo explicitly for it to appear.
- The repeat in emacs works with end date if you do not have todo with it. So it just adds a calendar entry on that day. I think this would be ideal for birthdays.
To cycle the folding states for the entire buffer, including putting the folder in the only-headings state:
#+BEGIN_SRC elisp
M-x org-global-cycle
#+END_SRC
- Cycling the entire buffer in the folding states can also be done with the shortcut: ~S-TAB~
- To create tables in org mode simply make the title like ~| a | b | c |~ and use tab to align them every now and then
- To start a reminder for a deadline different number of days earlier, add words like -5d. For example if the deadline is mentioned as DEADLINE: <2004-02-29 Sun>, edit it to DEADLINE: <2004-02-29 Sun -5d>.
To see the agenda for the next <n> days, use the command:
#+BEGIN_SRC elisp
C-u <n> M-x org-agenda a
#+END_SRC
To repeat a subtree:
#+BEGIN_SRC elisp
org-clone-subtree-wth-time-shift
#+END_SRC
To match by tags, run the ~org-agenda~ command, press ~m~, and then enter the tag name with ~TAB~ for completion if needed.
** Config
Substitute selection
#+BEGIN_SRC elisp
(delete-selection-mode 1)
#+END_SRC
Display line numbers
#+BEGIN_SRC elisp
(global-linum-mode t)
#+END_SRC
Sometimes the zenburn theme may not be installed, install it with: M-x package-install <RET> zenburn-theme <RET>
